#include <iostream>

/*
팁
읽기 좋은 코드가 최상의 코드이다!!
어렵게 짜지말고 향후 몇개월 뒤에 봐도 읽을 수 있는 코드여야 한다

함수의 기초적인 설계 원칙
-사용자 인터페이스(UI)와 내부기능은 반드시 분리해야한다!
-하나의 단위 기능으로 규정을 할 수 있는 대상은 함수로 만들것

함수의 매개변수 유효성 검사는 callee가 해야한다!!(피호출자!!)
함수 내부에서 진행 해야한다!!

함수를 많이 구현해서 복잡하다고 생각 하지멀저!!

이벤트 루프 이해!!

유지보수에 신경써서 프로그래밍하기!!

함수의 원형 선언
컴파일러는 순차적으로 코드를 읽어 내려가는데 원형선언을 획인하고 함수인건을 확인하고 에러가 나지않는다
이런 원형 선언이 묶음이 해더 파일이다!!
*/

int Add(int a , int b) {
	int nResult = 0;
	nResult = a + b;
	return nResult;
}


int main() {
	int nResult = 0;
	std::cout << "Hello" << std::endl;
	nResult = Add(10, 10);
	/*
				함수의 이름 : 역시메모리의 주소
		nResult = Add(10,10);	()>>함수호출 연산자!!
				피연산자		
	*/
	printf("%d\n", nResult);

	return 0;
}